{
  "name": "MyCrypto",
  "author": "MyCryptoHQ",
  "version": "1.5.5",
  "main": "main.js",
  "description": "MyCrypto web and electron app",
  "repository": "https://github.com/MyCryptoHQ/MyCrypto",
  "engines": {
    "node": ">= 8.0.0",
    "npm": ">= 5.0.0"
  },
  "dependencies": {
    "@ledgerhq/hw-app-eth": "4.32.0",
    "@ledgerhq/hw-transport-node-hid": "4.33.3",
    "@ledgerhq/hw-transport-u2f": "4.32.0",
    "@parity/qr-signer": "0.3.2",
    "axios": "0.18.0",
    "babel-polyfill": "6.26.0",
    "bip39": "2.5.0",
    "bn.js": "4.11.8",
    "bootstrap-sass": "3.4.0",
    "classnames": "2.2.6",
    "electron-updater": "4.0.6",
    "ethereum-blockies-base64": "1.0.2",
    "ethereumjs-abi": "git://github.com/ethereumjs/ethereumjs-abi.git#09c3c48fd3bed143df7fa8f36f6f164205e23796",
    "ethereumjs-tx": "1.3.7",
    "ethereumjs-util": "5.1.5",
    "ethereumjs-wallet": "0.6.3",
    "font-awesome": "4.7.0",
    "formik": "1.4.2",
    "hdkey": "1.1.0",
    "html2canvas": "1.0.0-alpha.12",
    "idna-uts46": "1.1.0",
    "jsonschema": "1.2.4",
    "lodash": "4.17.11",
    "lodash.flatten": "4.4.0",
    "lodash.get": "4.4.2",
    "moment": "2.24.0",
    "moment-timezone": "0.5.23",
    "mycrypto-eth-exists": "1.0.0",
    "mycrypto-shepherd": "1.4.0",
    "normalizr": "3.3.0",
    "qrcode": "1.3.3",
    "qrcode.react": "0.9.2",
    "query-string": "6.2.0",
    "rc-slider": "8.6.4",
    "react": "16.7.0",
    "react-copy-to-clipboard": "5.0.1",
    "react-dom": "16.7.0",
    "react-markdown": "4.0.6",
    "react-onclickoutside": "6.7.1",
    "react-redux": "5.0.7",
    "react-router-dom": "4.3.1",
    "react-router-redux": "4.0.8",
    "react-select": "1.2.1",
    "react-spring": "5.9.2",
    "react-stepper-horizontal": "1.0.11",
    "react-transition-group": "2.5.3",
    "redux": "4.0.1",
    "redux-logger": "3.0.6",
    "redux-saga": "0.16.2",
    "rskjs-util": "1.0.3",
    "scryptsy": "2.0.0",
    "semver": "5.6.0",
    "trezor.js": "6.19.4",
    "uuid": "3.3.2",
    "wallet-address-validator": "0.2.4",
    "whatwg-fetch": "3.0.0",
    "zxcvbn": "4.4.2"
  },
  "devDependencies": {
    "@types/bip39": "2.4.1",
    "@types/classnames": "2.2.7",
    "@types/enzyme": "3.1.15",
    "@types/enzyme-adapter-react-16": "1.0.3",
    "@types/events": "3.0.0",
    "@types/history": "4.7.2",
    "@types/html2canvas": "0.0.35",
    "@types/jest": "23.3.13",
    "@types/lodash": "4.14.120",
    "@types/moment-timezone": "0.5.10",
    "@types/node-hid": "0.7.0",
    "@types/qrcode": "1.3.0",
    "@types/qrcode.react": "0.8.1",
    "@types/query-string": "6.2.0",
    "@types/rc-slider": "8.6.0",
    "@types/react": "16.7.20",
    "@types/react-dom": "16.0.11",
    "@types/react-redux": "7.0.0",
    "@types/react-router-dom": "4.3.1",
    "@types/react-router-redux": "5.0.17",
    "@types/react-select": "2.0.11",
    "@types/react-transition-group": "2.0.15",
    "@types/redux-logger": "3.0.6",
    "@types/semver": "5.5.0",
    "@types/uuid": "3.4.4",
    "@types/webpack-env": "1.13.6",
    "@types/zxcvbn": "4.4.0",
    "autodll-webpack-plugin": "0.4.2",
    "check-node-version": "3.2.0",
    "concurrently": "4.1.0",
    "copy-webpack-plugin": "4.6.0",
    "core-js": "2.6.3",
    "coveralls": "3.0.2",
    "css-loader": "2.1.0",
    "electron": "4.0.2",
    "electron-builder": "20.38.5",
    "electron-rebuild": "1.8.2",
    "empty": "0.10.1",
    "enzyme": "3.8.0",
    "enzyme-adapter-react-16": "1.7.1",
    "enzyme-to-json": "3.3.5",
    "express": "4.16.4",
    "file-loader": "3.0.1",
    "friendly-errors-webpack-plugin": "1.7.0",
    "hard-source-webpack-plugin": "0.13.1",
    "html-webpack-plugin": "3.2.0",
    "husky": "0.14.3",
    "image-webpack-loader": "4.6.0",
    "isomorphic-fetch": "2.2.1",
    "jest": "23.6.0",
    "klaw-sync": "6.0.0",
    "lint-staged": "8.1.0",
    "mini-css-extract-plugin": "0.5.0",
    "minimist": "1.2.0",
    "mycrypto-nano-result": "0.0.1",
    "node-hid": "0.7.6",
    "node-sass": "4.11.0",
    "nodemon": "1.18.9",
    "null-loader": "0.1.1",
    "prettier": "1.16.1",
    "raw-loader": "1.0.0",
    "react-hot-loader": "4.6.3",
    "react-test-renderer": "16.7.0",
    "redux-devtools-extension": "2.13.7",
    "redux-test-utils": "0.3.0",
    "rimraf": "2.6.3",
    "sass-loader": "7.1.0",
    "style-loader": "0.23.1",
    "thread-loader": "2.1.1",
    "ts-jest": "23.10.5",
    "ts-loader": "5.3.3",
    "ts-node": "8.0.1",
    "tslint": "5.12.1",
    "tslint-config-prettier": "1.17.0",
    "tslint-microsoft-contrib": "6.0.0",
    "tslint-react": "3.6.0",
    "types-rlp": "0.0.1",
    "typescript": "3.2.4",
    "u2f-api": "1.0.10",
    "uglifyjs-webpack-plugin": "2.1.1",
    "url-search-params-polyfill": "5.0.0",
    "webapp-webpack-plugin": "2.6.0",
    "webpack": "4.29.0",
    "webpack-cli": "3.2.1",
    "webpack-dev-middleware": "3.5.1",
    "webpack-hot-middleware": "2.24.3",
    "webpack-sources": "1.3.0",
    "webpack-subresource-integrity": "1.3.1",
    "what-input": "5.1.3",
    "worker-loader": "2.0.0"
  },
  "resolutions": {
    "*/**/@types/react": "16.3.11"
  },
  "scripts": {
    "freezer": "webpack --config=./webpack_config/webpack.freezer.js && node ./dist/freezer.js",
    "freezer:validate": "npm run freezer -- --validate",
    "db": "nodemon ./db",
    "build": "webpack --mode=production --config webpack_config/webpack.prod.js",
    "prebuild": "check-node-version --package",
    "build:downloadable": "webpack --mode=production --config webpack_config/webpack.html.js",
    "prebuild:downloadable": "check-node-version --package",
    "build:electron": "webpack --config webpack_config/webpack.electron-prod.js && node webpack_config/buildElectron.js",
    "build:electron:osx": "webpack --config webpack_config/webpack.electron-prod.js && ELECTRON_OS=osx node webpack_config/buildElectron.js",
    "build:electron:windows": "webpack --config webpack_config/webpack.electron-prod.js && ELECTRON_OS=windows node webpack_config/buildElectron.js",
    "build:electron:linux": "webpack --config webpack_config/webpack.electron-prod.js && ELECTRON_OS=linux node webpack_config/buildElectron.js",
    "prebuild:electron": "check-node-version --package",
    "jenkins:build:linux": "webpack --config webpack_config/webpack.electron-prod.js && ELECTRON_OS=JENKINS_LINUX node webpack_config/buildElectron.js",
    "jenkins:build:mac": "webpack --config webpack_config/webpack.electron-prod.js && ELECTRON_OS=JENKINS_MAC node webpack_config/buildElectron.js",
    "jenkins:upload": "node jenkins/upload",
    "test:coverage": "jest --config=jest_config/jest.config.json --coverage",
    "test": "jest --config=jest_config/jest.config.json",
    "test:unit": "jest --config=jest_config/jest.config.json --coverage",
    "test:int": "jest --config=jest_config/jest.int.config.json --coverage",
    "report-coverage": " cat ./coverage/lcov.info | coveralls",
    "updateSnapshot": "jest --config=jest_config/jest.config.json --updateSnapshot",
    "pretest": "check-node-version --package",
    "dev": "node webpack_config/devServer.js",
    "predev": "check-node-version --package",
    "dev:https": "HTTPS=true node webpack_config/devServer.js",
    "predev:https": "check-node-version --package",
    "dev:electron": "concurrently --kill-others --names 'webpack,electron' 'BUILD_ELECTRON=true node webpack_config/devServer.js' 'webpack --config webpack_config/webpack.electron-dev.js && electron dist/electron-js/main.js'",
    "tslint": "tslint --project . --exclude common/vendor/**/*",
    "tscheck": "tsc --noEmit",
    "start": "npm run dev",
    "precommit": "lint-staged",
    "formatAll": "find ./common/ -name '*.ts*' | xargs prettier --write --config ./.prettierrc --config-precedence file-override",
    "prettier:diff": "prettier --write --config ./.prettierrc --list-different \"common/**/*.ts\" \"common/**/*.tsx\"",
    "prepush": "npm run tslint && npm run tscheck",
    "update:tokens": "ts-node scripts/update-tokens",
    "postinstall": "electron-rebuild --force"
  },
  "lint-staged": {
    "*.{ts,tsx}": [
      "prettier --write --config ./.prettierrc --config-precedence file-override",
      "git add"
    ]
  },
  "freezer": [
    "package.json",
    "common/freezer.ts",
    "common/store.ts",
    "common/libs/decrypt.ts",
    "common/libs/signing.ts"
  ]
}
